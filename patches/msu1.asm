SECTION "MSU1 Bootstrap Data", ROMX	; append to free space after bank of data/sgb_ctrl_packets
include "patches/msu1/_bootstrap.asm"	; generated by makefile

;-------------------------------------------------------------------------------
SECTION "MSU1 Packets", ROMX		; append to free space after bank of data/sgb_ctrl_packets
JumpToMSU1EntryPoint: sgb_jump $1810, 0, 0, 0
MSU1SoundTemplate:: sgb_data_snd $1800, $0, 5
	;   R #l #h  V    M
	db  1, 0, 0, $FF, 0
	ds 6, 0
UpdateVolumePacket:: sgb_data_snd $1800, $0, 1
	db  %01000000
	ds 10, 0
StopMusicPacket:: sgb_data_snd $1800, $0, 1
	db  %00100000
	ds 10, 0
DuckMusicPacket:: sgb_data_snd $1807, $0, 1
	db  255/3
	ds 10, 0
UnduckMusicPacket:: sgb_data_snd $1807, $0, 1
	db  0
	ds 10, 0

;-------------------------------------------------------------------------------
SECTION "MSU1 Bootstrap", ROMX	; replace engine/gfx/color/_InitSGBBorderPals
InitSGBBorderPals:
	ld hl, .pointers
	ld c, 9		; original data snd stuff
.loop
	push bc
	ld a, [hli]
	push hl
	ld h, [hl]
	ld l, a
	call _PushSGBPals
	pop hl
	inc hl
	pop bc
	dec c
	jr nz, .loop
; UpdateSGBBorder, the function after this, is unreferenced. Clobber over it.
.bootstrap_msu1
	ld hl, Packets_bootstrap
	ld c, [hl]	; amount of packets to send
	inc hl
.push_bootstrap
	call _PushSGBPals
	dec c
	jr nz, .push_bootstrap
	ret
.pointers
	dw MaskEnFreezePacket
	dw DataSndPacket1
	dw DataSndPacket2
	dw DataSndPacket3
	dw DataSndPacket4
	dw DataSndPacket5
	dw DataSndPacket6
	dw DataSndPacket7
	dw DataSndPacket8

;-------------------------------------------------------------------------------
